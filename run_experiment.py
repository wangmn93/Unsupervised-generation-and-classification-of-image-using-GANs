from __future__ import print_function
import argparse
import textwrap

if __name__=='__main__':
    experiments = ['DEC + GAN on MNIST',
                   'Modified CatGAN on FMNIST',
                   'Modified CatGAN + GAN on FMNIST',
                   'IMSAT + GAN on SVHN',
                   'LearningByAssociation + GAN on SVHN',
                   'LearningByAssociation + GAN on CIFAR-10',
                   'LearningByAssociation + GAN + VAEGAN on SVHN'
                   ]
    # parser = argparse.ArgumentParser(
    #     prog='D1254 Mengnan Wang',
    #     formatter_class=argparse.RawDescriptionHelpFormatter,
    #     epilog=textwrap.dedent('''\
    #          Experiment index:
    #          0 DEC + GAN on MNIST
    #          1 Modified CatGAN on FMNIST
    #          2 Modified CatGAN + GAN on FMNIST
    #          3 IMSAT + GAN on SVHN
    #          4 LearningByAssociation + GAN on SVHN
    #          5 LearningByAssociation + GAN on CIFAR-10
    #          6 LearningByAssociation + GAN + VAEGAN on SVHN
    #
    #          To speed up the implemention, I use a cnn model to
    #          approximate IMSAT and LearningByAssociation instead of building
    #           the computational graph for each model in Tensorflow. The cnn
    #           model is trained with the labels generated by IMSAT and LearningByAssociation.
    #          So it is still an unsupervised/semi-supervised model.
    #          '''))
    # parser.add_argument('-i', help='experiment index', default='0')

    print(textwrap.dedent('''\
                ===Unsupervised generation and classification of image using GANs===
                ===D1254 Mengnan Wang===

                 Experiment index:
                 0 DEC + GAN on MNIST
                 1 Modified CatGAN on FMNIST
                 2 Modified CatGAN + GAN on FMNIST
                 3 IMSAT + GAN on SVHN
                 4 LearningByAssociation + GAN on SVHN
                 5 LearningByAssociation + GAN on CIFAR-10
                 6 LearningByAssociation + GAN + VAEGAN on SVHN

                (To speed up the implemention, I use a cnn model to
                approximate IMSAT and LearningByAssociation instead of building
                the computational graph for each model in Tensorflow. The cnn
                model is trained with the labels generated by IMSAT and LearningByAssociation.
                So it is still an unsupervised/semi-supervised model.)
                 '''))
    index = input('Please input experiment index...')
    # args = vars(parser.parse_args())
    # parser.print_help()
    try:
        index = int(index)
        if index > len(experiments): raise ValueError('')
    except ValueError:
        print('Please input a valid experiment index')
        exit()


    print('\nSelected Experiment','[%d]'%index, experiments[index])

    # input('Hit any key to continue...')
    if index == 0:
        from DECxGANxMNIST import run
        run()

    elif index == 1:
        from MCatGAN import run
        run()

    elif index == 2:
        from MCatGANxGANxFMNIST import run
        run()

    elif index == 3:
        from IMSATxLBAxGANxSVHNxCIFAR10 import run
        run('imsat-svhn')

    elif index == 4:
        from IMSATxLBAxGANxSVHNxCIFAR10 import run
        run('lba-svhn')

    elif index == 5:
        from IMSATxLBAxGANxSVHNxCIFAR10 import run
        run('lba-cifar-10')

    elif index == 6:
        from LBAxGANxVAEGANxSVHN import run
        run()

